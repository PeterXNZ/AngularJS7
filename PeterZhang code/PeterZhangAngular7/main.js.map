{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add/add.component.css","webpack:///./src/app/add/add.component.html","webpack:///./src/app/add/add.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/stdEmailFilter.filter.ts","webpack:///./src/app/students.service.ts","webpack:///./src/app/view/helo.component.ts","webpack:///./src/app/view/view.component.css","webpack:///./src/app/view/view.component.html","webpack:///./src/app/view/view.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC9hZGQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"add-main\\\">  \\n  <h2 class=\\\"text-center\\\">Add Students</h2>  \\n  <form [formGroup]=\\\"addForm\\\" novalidate class=\\\"form\\\">  \\n      \\n\\n      <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('full_name').hasError('required') && addForm.get('full_name').touched\\\">  \\n        Please enter full Name.  \\n      </div>  \\n\\n        <div class=\\\"form-group\\\">  \\n            <label for=\\\"fName\\\"> Full Name:</label>  \\n            <input type=\\\"text\\\" formControlName=\\\"full_name\\\" placeholder=\\\"Students Full Name\\\" name=\\\"full_name\\\" class=\\\"form-control\\\"> \\n       </div>  \\n\\n       \\n\\n       <div class=\\\"form-group\\\">  \\n          <label for=\\\"cDate\\\"> Created Date:</label>  \\n          <input type=\\\"text\\\" formControlName=\\\"created_date\\\" placeholder=\\\"Created Date\\\" name=\\\"created_date\\\" class=\\\"form-control\\\"> \\n     </div>  \\n\\n\\n     <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('created_date').hasError('maxlength') && addForm.get('created_date').touched\\\">  \\n          Maximum 12 characters are allowed.\\n      </div>  \\n\\n\\n     <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('created_date').hasError('required') && addForm.get('created_date').touched\\\">  \\n        Please enter created date.  \\n      </div> \\n\\n\\n\\n     <div class=\\\"form-group\\\">  \\n        <label for=\\\"email\\\">Email:</label>  \\n        <input type=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Students email\\\" name=\\\"email\\\" class=\\\"form-control\\\"> \\n   </div> \\n\\n   <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('email').hasError('maxlength') && addForm.get('email').touched\\\">  \\n      Maximum 30 characters are allowed.\\n  </div> \\n\\n   <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('email').hasError('required') && addForm.get('email').touched\\\">  \\n      Please enter email Id.  \\n    </div> \\n\\n\\n    <div class=\\\"form-group\\\">  \\n      <label for=\\\"DOB\\\">DOB:</label>  \\n      <input type=\\\"DOB\\\" formControlName=\\\"DOB\\\" placeholder=\\\"Students DOB\\\" name=\\\"DOB\\\" class=\\\"form-control\\\"> \\n </div> \\n\\n <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('DOB').hasError('maxlength') && addForm.get('DOB').touched\\\">  \\n    Maximum 30 characters are allowed.\\n</div> \\n\\n <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('DOB').hasError('required') && addForm.get('DOB').touched\\\">  \\n    Please enter DOB.  \\n  </div> \\n\\n\\n   <button class=\\\"btn btn-success\\\"  (click)=\\\"onSubmit()\\\">Save</button> \\n\\n   </form>\\n\\n   <a  routerLink=\\\"/view\\\" class=\\\"btn btn-primary\\\">View Student</a>\\n   </div>\\n   \"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {StudentsService} from '../students.service';\nimport { Router } from '@angular/router';\nimport { Students } from '../students';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n     private _studentService: StudentsService,\n     private router: Router\n     ) {\n  }\n  addForm: FormGroup;\n  ngOnInit() {\n    \n    this.addForm = this.formBuilder.group({  \n      sId:[''],\n      full_name: ['', Validators.required],\n      created_date: ['', [Validators.required, Validators.maxLength(12)]],\n      email: ['', [Validators.required, Validators.maxLength(30)]],\n      DOB: ['', [Validators.required, Validators.maxLength(30)]]\n    });\n  }\n\n  onSubmit() {\n    console.log(this.addForm.value);\n   this._studentService.createStudent(this.addForm.value)\n   .subscribe(data => {\n     console.log(data)\n     this.router.navigate(['view']); \n   });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PeterZhang';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { AddComponent } from './add/add.component';\nimport { ViewComponent } from './view/view.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EditComponent } from './edit/edit.component';\nimport {StdEmailFilter} from './stdEmailFilter.filter';\nimport {HelloComponent} from './view/helo.component';\nimport { HomeComponent } from './home/home.component';\nexport const routes: Routes = [\n  { path: '', component: HomeComponent, pathMatch: 'full' },\n  { path: 'view', component: ViewComponent },\n  { path: 'add', component: AddComponent },\n  { path: 'edit/:id', component: EditComponent },\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddComponent,\n    ViewComponent,\n    EditComponent,\n    StdEmailFilter,\n    HelloComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"add-main\\\">  \\n  <h2 class=\\\"text-center\\\">Edit Student</h2>  \\n  <form [formGroup]=\\\"addForm\\\" novalidate class=\\\"form\\\">  \\n      \\n    <input type=\\\"hidden\\\" formControlName=\\\"sId\\\" name=\\\"sId\\\">\\n      <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('fName').hasError('required') && addForm.get('fName').touched\\\">  \\n        Please enter full Name.  \\n      </div>  \\n\\n        <div class=\\\"form-group\\\">  \\n            <label for=\\\"fName\\\"> Full Name:</label>  \\n            <input type=\\\"text\\\" formControlName=\\\"fName\\\" placeholder=\\\"Students Full Name\\\" name=\\\"fName\\\" class=\\\"form-control\\\"> \\n       </div>  \\n\\n       \\n\\n       <div class=\\\"form-group\\\">  \\n          <label for=\\\"cDate\\\"> Created Date:</label>  \\n          <input type=\\\"text\\\" formControlName=\\\"cDate\\\" placeholder=\\\"created date\\\" name=\\\"cDate\\\" class=\\\"form-control\\\"> \\n     </div>  \\n\\n\\n     <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('cDate').hasError('maxlength') && addForm.get('cDate').touched\\\">  \\n          Maximum 12 characters are allowed.\\n      </div>  \\n\\n\\n     <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('cDate').hasError('required') && addForm.get('cDate').touched\\\">  \\n        Please enter created date.  \\n      </div> \\n\\n\\n\\n     <div class=\\\"form-group\\\">  \\n        <label for=\\\"email\\\">Email:</label>  \\n        <input type=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Students email\\\" name=\\\"email\\\" class=\\\"form-control\\\"> \\n   </div> \\n\\n   <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('email').hasError('maxlength') && addForm.get('email').touched\\\">  \\n      Maximum 30 characters are allowed.\\n  </div> \\n\\n   <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('email').hasError('required') && addForm.get('email').touched\\\">  \\n      Please enter email Id.  \\n    </div> \\n\\n\\n\\n    \\n    <div class=\\\"form-group\\\">  \\n      <label for=\\\"DOB\\\">DOB:</label>  \\n      <input type=\\\"DOB\\\" formControlName=\\\"DOB\\\" placeholder=\\\"Students DOB\\\" name=\\\"DOB\\\" class=\\\"form-control\\\"> \\n </div> \\n\\n <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('DOB').hasError('maxlength') && addForm.get('DOB').touched\\\">  \\n    Maximum 30 characters are allowed.\\n</div> \\n\\n <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"addForm.get('DOB').hasError('required') && addForm.get('DOB').touched\\\">  \\n    Please enter DOB.  \\n  </div> \\n\\n   <button class=\\\"btn btn-success\\\"  (click)=\\\"update()\\\">Edit Student</button> \\n\\n   </form>\\n\\n   <a  routerLink=\\\"/view\\\" class=\\\"btn btn-primary\\\">View Student</a>\\n   </div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {StudentsService} from '../students.service';\nimport { Router, Params, ActivatedRoute } from '@angular/router';\nimport { Students } from '../students';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n    private _studentService: StudentsService,\n    private router: Router,\n    private routes: ActivatedRoute\n    ) {\n }\n\n  addForm: FormGroup;\n\n  ngOnInit() {\n    const routeParams = this.routes.snapshot.params;\n\n    console.log(routeParams.id)\n  \n  \n\n\n    this.addForm = this.formBuilder.group({\n      sId:[''],\n      fName: ['', Validators.required],\n      cDate: ['', [Validators.required, Validators.maxLength(12)]],\n      email: ['', [Validators.required, Validators.maxLength(30)]],\n      DOB: ['', [Validators.required, Validators.maxLength(30)]],\n\n    });\n\n    this._studentService.getById(routeParams.id).subscribe((data: any) => {\n     console.log(data)\n     this.addForm.patchValue(data);\n    });\n\n  }\n\n  update(){\n\n\n   this._studentService.updateStudent(this.addForm.value).subscribe(() => {\n    this.router.navigate(['view']);\n  },\n    error => {\n      alert(error);\n    });\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-hello email=\\\"{{ email }}\\\"></app-hello>\\n\\n\\n<div class=\\\"row std-list\\\" >\\n    \\n    <div class=\\\"col-md-2 std-list\\\">Full Name</div>\\n    \\n    <div class=\\\"col-md-2 std-list\\\">Email</div>\\n \\n\\n  </div>\\n\\n\\n<div class=\\\"row std-list\\\" *ngFor=\\\"let std of students | stdEmailFilter:searchText \\\">\\n  \\n  <div class=\\\"col-md-2 std-list\\\">{{std.fName}}</div>\\n \\n  <div class=\\\"col-md-2 std-list\\\">{{std.email}}</div>\\n \\n  \\n</div>\\n<div>\\n\\n  <a  routerLink=\\\"/view\\\" class=\\\"btn btn-primary\\\">View Details</a>\\n \\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {StudentsService} from '../students.service';\nimport {Students} from '../students';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  students: Students[];\n  _id: any;\n  constructor(private _studentsService: StudentsService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n\n    this._studentsService.getStudents()\n    .subscribe((data: Students[]) => {\n      this.students = data;\n      console.log(this.students);\n    });\n  }\n  detail(students: Students){\n    this._id = students.sId;\n    this.router.navigate(['view/' ]);\n  }\n  \n}\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\nimport {StudentsService} from './students.service';\r\n\r\n@Pipe({\r\n  name: 'stdEmailFilter'\r\n})\r\n@Injectable()\r\nexport class StdEmailFilter implements PipeTransform {\r\n \r\n    transform(items: any[], searchText: string): any[] {\r\n        if(!items) { return []; }\r\n        if(!searchText) { return items; }\r\n    searchText = searchText.toLowerCase();\r\n   // console.log(searchText);\r\n   // console.log(items.filter( (it: any) => it.toString().indexOf(searchText)));\r\n    return items.filter( (it: any) => it.toString().indexOf(searchText));\r\n       }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Students } from './students';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class StudentsService {\n\n  constructor(private http: HttpClient) { }\n\n  getStudents() {\n    return this.http.get<Students[]>('http://localhost/peterzhang/list.php');\n  }  \n\n  deleteStudent(id:number){\n\n    return this.http.get<Students[]>('http://localhost/peterzhang/delete.php?id=' + id); \n    \n\n  } \n  \n  createStudent(users: Students) {\n    return this.http.post('http://localhost/peterzhang/insert.php', users);\n  }  \n\n  getById(id:any){\n\n   return this.http.get<Students[]>('http://localhost/peterzhang/getById.php?id=' + id);\n  }\n\n  updateStudent(student: Students){\n\n      return this.http.post('http://localhost/peterzhang/update.php' + '?id='+student.sId, student);\n\n  }\n\n}\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-hello',\r\n  template: `<h1>Hello {{email}}!</h1>`,\r\n  styles: [`h1 { font-family: Lato; }`]\r\n})\r\nexport class HelloComponent  {\r\n  @Input() email: string;\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXcvdmlldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-hello email=\\\"{{ email }}\\\"></app-hello>\\n\\n<div class=\\\"row std-list\\\" >\\n    \\n    <div class=\\\"col-md-2 std-list\\\">Full Name</div>\\n    <div class=\\\"col-md-2 std-list\\\">CreatedDate</div>\\n    <div class=\\\"col-md-2 std-list\\\">Email</div>\\n    <div class=\\\"col-md-2 std-list\\\">DOB</div>\\n    <div class=\\\"col-md-2 std-list\\\">Edit</div>\\n    <div class=\\\"col-md-2 std-list\\\">Delete</div>\\n  </div>\\n\\n\\n<div class=\\\"row std-list\\\" *ngFor=\\\"let std of students | stdEmailFilter:searchText \\\">\\n  \\n  <div class=\\\"col-md-2 std-list\\\">{{std.fName}}</div>\\n  <div class=\\\"col-md-2 std-list\\\">{{std.cDate}}</div>\\n  <div class=\\\"col-md-2 std-list\\\">{{std.email}}</div>\\n  <div class=\\\"col-md-2 std-list\\\">{{std.DOB}}</div>\\n  <div class=\\\"col-md-2 std-list\\\"><button class=\\\"btn btn-success\\\" (click)=\\\"edit(std)\\\">EDIT</button></div>\\n  <div class=\\\"col-md-2 std-list\\\"><button class=\\\"btn btn-danger\\\" (click)=\\\"delete(std)\\\">DELETE</button></div>\\n</div>\\n<div>\\n\\n  <a  routerLink=\\\"/add\\\" class=\\\"btn btn-primary\\\">Add New Student</a>\\n\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport {StudentsService} from '../students.service';\nimport {Students} from '../students';\n\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n \n  students: Students[];\n  _id: any;\n  constructor(private _studentsService: StudentsService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n\n    this._studentsService.getStudents()\n    .subscribe((data: Students[]) => {\n      this.students = data;\n      console.log(this.students);\n    });\n  }\n\ndelete(students: Students): void{\n\n  // console.log(students._id);\n\n  this._studentsService.deleteStudent(students.sId)\n      .subscribe(data => {\n        this.students = this.students.filter(u => u !== students);\n      });\n}\n\nedit(students: Students){\n  this._id = students.sId;\n  this.router.navigate(['edit/' + this._id]);\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}